@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,400;0,500;0,600;0,700;1,400&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Terminal Design System - All colors in HSL */
@layer base {
  :root {
    /* Catppuccin Mocha Theme */
    --terminal-bg: 240 21% 15%;         /* Base #1e1e2e */
    --terminal-bg-alt: 237 16% 23%;     /* Surface0 #313244 */
    --terminal-border: 240 17% 30%;     /* Surface1 #45475a */
    
    /* Terminal Colors */
    --terminal-green: 115 54% 76%;      /* Green #a6e3a1 */
    --terminal-yellow: 41 86% 83%;      /* Yellow #f9e2af */
    --terminal-amber: 23 92% 75%;       /* Peach #fab387 */
    --terminal-red: 343 81% 75%;        /* Red #f38ba8 */
    --terminal-blue: 217 92% 76%;       /* Blue #89b4fa */
    --terminal-cyan: 189 71% 73%;       /* Sky #89dceb */
    --terminal-magenta: 267 84% 81%;    /* Mauve #cba6f7 */
    
    /* Text Colors */
    --terminal-text: 226 64% 88%;       /* Text #cdd6f4 */
    --terminal-text-dim: 227 35% 80%;   /* Subtext0 #a6adc8 */
    --terminal-text-alt: 41 86% 83%;    /* Yellow #f9e2af */
    --terminal-prompt: 115 54% 76%;     /* Green #a6e3a1 */
    
    /* Cursor */
    --terminal-cursor: 115 54% 76%;     /* Green #a6e3a1 */
    
    /* Semantic mappings for compatibility */
    --background: var(--terminal-bg);
    --foreground: var(--terminal-text);
    --primary: var(--terminal-green);
    --primary-foreground: var(--terminal-bg);
    --secondary: var(--terminal-bg-alt);
    --secondary-foreground: var(--terminal-text);
    --accent: var(--terminal-yellow);
    --accent-foreground: var(--terminal-bg);
    --muted: var(--terminal-bg-alt);
    --muted-foreground: var(--terminal-text-dim);
    --border: var(--terminal-border);
    --input: var(--terminal-bg-alt);
    --ring: var(--terminal-green);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-mono;
    font-family: 'JetBrains Mono', 'Cascadia Code', 'Fira Code', 'Courier New', monospace;
  }

  /* Terminal scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--terminal-bg));
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--terminal-border));
    border-radius: 0;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--terminal-text-dim));
  }
}

@layer components {
  /* Terminal Window */
  .terminal-window {
    @apply bg-background border border-border rounded-none;
    background: hsl(var(--terminal-bg));
    border-color: hsl(var(--terminal-border));
  }

  /* Terminal Text */
  .terminal-text {
    color: hsl(var(--terminal-text));
  }

  .terminal-prompt {
    color: hsl(var(--terminal-prompt));
  }

  .terminal-dim {
    color: hsl(var(--terminal-text-dim));
  }

  .terminal-yellow {
    color: hsl(var(--terminal-yellow));
  }

  .terminal-red {
    color: hsl(var(--terminal-red));
  }

  /* Blinking cursor animation */
  .terminal-cursor {
    @apply inline-block;
    background: hsl(var(--terminal-cursor));
    animation: blink 1s infinite;
  }

  .terminal-cursor::after {
    content: '█';
    color: hsl(var(--terminal-cursor));
  }

  /* Terminal Input */
  .terminal-input {
    @apply bg-transparent border-none outline-none resize-none;
    background: hsl(var(--terminal-bg));
    color: hsl(var(--terminal-text));
    font-family: inherit;
  }

  .terminal-input::placeholder {
    color: hsl(var(--terminal-text-dim));
  }

  /* Terminal Button */
  .terminal-button {
    @apply px-2 py-1 bg-transparent border border-border rounded-none;
    background: hsl(var(--terminal-bg-alt));
    color: hsl(var(--terminal-text));
    border-color: hsl(var(--terminal-border));
    transition: all 0.2s ease;
  }

  .terminal-button:hover {
    background: hsl(var(--terminal-border));
    color: hsl(var(--terminal-yellow));
  }

  /* ASCII Border */
  .ascii-border {
    border: 1px solid hsl(var(--terminal-border));
    position: relative;
  }

  .ascii-border::before {
    content: '┌' '─' '┐' '\A' '│' ' ' '│' '\A' '└' '─' '┘';
    white-space: pre;
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
    pointer-events: none;
    color: hsl(var(--terminal-border));
  }
}

@layer utilities {
  /* Animation keyframes */
  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  @keyframes typewriter {
    from { width: 0; }
    to { width: 100%; }
  }

  .animate-blink {
    animation: blink 1s infinite;
  }

  .animate-typewriter {
    overflow: hidden;
    white-space: nowrap;
    animation: typewriter 2s steps(40, end);
  }

  /* Terminal spacing */
  .terminal-line {
    @apply min-h-[1.5rem] leading-6;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}